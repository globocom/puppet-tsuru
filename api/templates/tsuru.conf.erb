# - HTTP Server
# http://docs.tsuru.io/en/stable/reference/config.html#tsuru-configuration
listen: "<%= @tsuru_server_listen %>"
host: "<%= @tsuru_host %>"
<%- if @tsuru_use_tls %>
use-tls: <%= @tsuru_use_tls %>
tls:
  cert-file: <%= @tsuru_tls_cert_file %>
  key-file: <%= @tsuru_tls_key_file %>
  listen: <%= @tsuru_tls_listen %>
  <%- if @tsuru_tls_autoreload_interval -%>
  auto-reload:
    interval: <%= @tsuru_tls_autoreload_interval %>
  <%- end -%>
  <%- if @tsuru_tls_validate_certificate -%>
  validate-certificate: <%= @tsuru_tls_validate_certificate %>
  <%- end -%>
<%- end %>

# - Index API page
# http://docs.tsuru.io/en/stable/reference/config.html#index-page-template
disable-index-page: <%= @disable_index_page %>
<%= @index_page_template ? "index-page-template: #{@index_page_template}" : '' %>

# - Database access
# http://docs.tsuru.io/en/stable/reference/config.html#database-access
database:
  url: <%= @mongodb_url %>
  name: <%= @mongodb_database_name %>
  logdb-url: <%= @logdb_url %>
  logdb-name: <%= @logdb_database_name %>

<%- if @smtp_server %>
# - Email configuration
# http://docs.tsuru.io/en/stable/reference/config.html#email-configuration
smtp:
  server: <%= @smtp_server %>
  user: <%= @smtp_user %>
  <%= @smtp_password ? "password: #{@smtp_password}" : '' %>
<%- end %>

# - Repository management configuration
# http://docs.tsuru.io/en/stable/reference/config.html#repository-configuration
repo-manager: <%= @repo_manager %>
<%- if @git_api_server %>
git:
  api-server: <%= @git_api_server %>
<%- end %>

# - Authentication configuration
# http://docs.tsuru.io/en/stable/reference/config.html#authentication-configuration
auth:
  scheme: <%= @auth_scheme %>
  user-registration: <%= @auth_user_registration %>
  <%= @auth_max_simultaneous_sessions ? "max-simultaneous-sessions: #{@auth_max_simultaneous_sessions}" : '' %>
  <%- case @auth_scheme -%>
  <%- when 'native' -%>
  token-expire-days: <%= @auth_token_expire_days %>
  hash-cost: <%= @auth_hash_cost %>
  <%- when 'oauth' -%>
  oauth:
    client-id: <%= @oauth_client_id %>
    client-secret: <%= @oauth_client_secret %>
    scope: <%= @oauth_scope %>
    auth-url: <%= @oauth_auth_url %>
    token-url: <%= @oauth_token_url %>
    info-url: <%= @oauth_info_url %>
    collection: <%= @oauth_collection %>
    callback-port: <%= @oauth_callback_port %>
  <%- else -%>
  <%- raise Puppet::Error, "Auth scheme unknown. Valid types are: native or oauth" -%>
  <%- end %>

# Queue configuration
# http://docs.tsuru.io/en/stable/reference/config.html#config-queue
queue:
  mongo-url: <%= @queue_mongo_url %>
  mongo-database: <%= @queue_mongo_database %>

pubsub:
<%- if @redis_sentinel_hosts -%>
  redis-sentinel-addrs: <%= @redis_sentinel_hosts %>
  redis-sentinel-master: <%= @redis_sentinel_master %>
<%- else -%>
  redis-host: <%= @redis_host %>
<%- end -%>
<%= @redis_password ? "  redis-password: #{@redis_password}" : ''  %>
  redis-port: <%= @redis_port %>
  pool-max-idle-conn: <%= @redis_max_idle_conn %>
<%= @redis_db ? "  redis-db: #{@redis_db}" : ''  %>

# - Admin users
# http://docs.tsuru.io/en/stable/reference/config.html#admin-users
admin-team: <%= @tsuru_admin_team %>

<%- if @tsuru_apps_per_user %>
# - Quota management
# http://docs.tsuru.io/en/stable/reference/config.html#quota-management
quota:
  apps-per-user: <%= @tsuru_apps_per_user %>
  units-per-app: <%= @tsuru_units_per_app %>
<%- end %>

# - Router configuration
# http://docs.tsuru.io/en/stable/reference/config.html#config-routers
routers:
<%- @routers.keys.sort.each do |router| -%>
  <%= router %>:
<%- case routers[router]['router_type'] -%>
<%- when /(hipache|planb)/ -%>
    type: <%= $1 %>
    domain: <%= routers[router]["#{$1}_domain"] %>
    <%- if routers[router]["#{$1}_redis_server"] -%>
    redis-server: <%= routers[router]["#{$1}_redis_server"] %>
    <%- else -%>
    redis-sentinel-addrs: <%= routers[router]["#{$1}_redis_sentinel_addrs"] %>
    redis-sentinel-master: <%= routers[router]["#{$1}_redis_sentinel_master"] %>
<%= @routers[router]["#{$1}_redis_password"] ? "    redis-password: #{@routers[router][$1 + '_redis_password']}" : '' %>
    <%- end -%>
<%- when 'vulcand' -%>
    type: vulcand
    api-url: <%= routers[router]['vulcand_api_url'] %>
    domain: <%= routers[router]['vulcand_domain'] %>
<%- when /galeb.*/ -%>
    type: <%= routers[router]['router_type'] %>
    api-url: <%= routers[router]['galeb_api_url'] %>
    username: <%= routers[router]['galeb_username'] %>
    password: <%= routers[router]['galeb_password'] %>
    domain: <%= routers[router]['galeb_domain'] %>
    environment: <%= routers[router]['galeb_environment'] %>
    project: <%= routers[router]['galeb_project'] %>
    balance-policy: <%= routers[router]['galeb_balance_policy'] %>
    rule-type: <%= routers[router]['galeb_rule_type'] %>
    max-requests: <%= routers[router]['galeb_max_requests'] || 0 %>
    <%= @routers[router]['galeb_debug'] ? "debug: #{routers[router]['galeb_debug']}" : "debug: false" %>
    <%= @routers[router]['galeb_use_token'] ? "use-token: #{routers[router]['galeb_use_token']}" : "use-token: false" %>
<%- when 'api' -%>
    type: api
    api-url: <%= routers[router]['api_url'] %>
<% if @routers[router]['api_headers'] -%>
    headers:
<%- routers[router]['api_headers'].each do |header| -%>
      <%= header %>
<%- end -%>
<% end -%>
    <%= @routers[router]['api_debug'] ? "debug: #{routers[router]['api_debug']}" : "debug: false" %>
<%- else -%>
    <%- raise Puppet::Error, "Router type unknown. Valid types are: hipache, planb, vulcand, galeb or api" -%>
<%- end -%>
<%- end -%>

# - Provisioner configuration
# http://docs.tsuru.io/en/stable/reference/config.html#provisioner
provisioner: <%= @tsuru_provisioner %>
docker:
  bs:
    image: <%= @docker_bs_image %>
    reporter-interval: <%= @docker_bs_reporter_interval %>
    socket: <%= @docker_bs_socket %>
  segregate: <%= @docker_segregate %>
  <%= @docker_registry ? "registry: #{@docker_registry}" : '' %>
  <%- if @docker_registry_auth_username || @docker_registry_auth_password -%>
  registry-auth:
    <%= @docker_registry_auth_username ? "username: #{@docker_registry_auth_username}" : "" %>
    <%= @docker_registry_auth_password ? "password: #{@docker_registry_auth_password}" : "" %>
  <%- end -%>
  <%= @docker_max_layers ? "max-layers: #{@docker_max_layers}" : '' %>
  <%= @docker_port_allocator ? "port-allocator: #{@docker_port_allocator}" : '' %>
  collection: <%= @docker_collection %>
  repository-namespace: <%= @docker_repository_namespace %>
  router: <%= @docker_router %>
  deploy-cmd: <%= @docker_deploy_cmd %>
  image-history-size: <%= @docker_image_history_size %>
  cluster:
    mongo-url: <%= @docker_cluster_mongo_url %>
    mongo-database: <%= @docker_cluster_mongodb_db %>
  run-cmd:
    bin: <%= @docker_run_cmd_bin %>
    port: <%= @docker_run_cmd_port %>
  user: <%= @docker_user ? @docker_user : "" %>
  uid: <%= @docker_uid ? @docker_uid : -1 %>
  <%- if @docker_healing_heal_nodes -%>
  healing:
    heal-nodes: <%= @docker_healing_heal_nodes %>
    active-monitoring-interval: <%= @docker_healing_active_monitoring_interval %>
    disabled-time: <%= @docker_healing_disabled_time %>
    max-failures: <%= @docker_healing_max_failures %>
    wait-new-time: <%= @docker_healing_wait_new_time %>
    heal-containers-timeout: <%= @docker_healing_heal_containers_timeout %>
    events-collection : <%= @docker_healing_events_collection %>
    max-time: <%= @docker_healthcheck_max_time %>
  <%- end -%>
  <%- if @docker_security_opts.length > 0 -%>
  security-opts:
  <%- docker_security_opts.each do |security_opt_item| -%>
    - <%= security_opt_item %>
  <%- end -%>
  <%- end -%>
  <%- if @docker_scheduler_memory -%>
  scheduler:
    total-memory-metadata: <%= @docker_scheduler_total_memory_metadata %>
    max-used-memory: <%= @docker_scheduler_max_used_memory %>
  <%- end -%>
  <%- if @docker_use_auto_scale -%>
  auto-scale:
    enabled: <%= @docker_auto_scale_enabled %>
    <%- if @docker_auto_scale_run_interval -%>
    run-interval: <%= @docker_auto_scale_run_interval %>
    <%- end -%>
  <%- end -%>
  <%- if @docker_nodecontainer_max_workers -%>
  nodecontainer:
    max-workers: <%= @docker_nodecontainer_max_workers %>
  <%- end -%>
  <%- if @docker_max_workers -%>
  max-workers: <%= @docker_max_workers %>
  <%- end -%>

kubernetes:
  <%- if @kubernetes_deploy_sidecar_image -%>
  deploy-sidecar-image: <%= @kubernetes_deploy_sidecar_image %>
  <%- end -%>
  <%- if @kubernetes_deploy_inspect_image -%>
  deploy-inspect-image: <%= @kubernetes_deploy_inspect_image %>
  <%- end -%>
  <%- if @kubernetes_use_pool_namespaces -%>
  use-pool-namespaces: <%= @kubernetes_use_pool_namespaces %>
  <%- end -%>

volume-plans:
<%- @volume_plans.keys.sort.each do |plan| -%>
  <%= plan %>:
  <%- if @volume_plans[plan]['kubernetes'] -%>
    kubernetes:
      <%- @volume_plans[plan]['kubernetes'].keys.sort.each do |opt| -%>
      <%= opt %>: <%= volume_plans[plan]['kubernetes'][opt] %>
      <%- end -%>
  <%- end -%>
  <%- if @volume_plans[plan]['swarm'] -%>
    swarm:
      <%- @volume_plans[plan]['swarm'].keys.sort.each do |opt| -%>
      <%= opt %>: <%= volume_plans[plan]['swarm'][opt] %>
      <%- end -%>
  <%- end -%>
<%- end -%>

# - Iaas configuration
# http://docs.tsuru.io/en/stable/reference/config.html#iaas-configuration
<%- if @iaas_enable -%>
iaas:
  <%= @tsuru_iaas_default ? "default: #{tsuru_iaas_default}\n" : "default: ec2\n" -%>
  <%- if @cloudstack_apikey -%>
  cloudstack:
    api-key: <%= @cloudstack_apikey %>
    secret-key: <%= @cloudstack_secretkey %>
    url: <%= @cloudstack_api_url %>
    user-data: <%= @cloudstack_user_data %>
    wait-timeout: <%= @cloudstack_wait_timeout %>
  <%- end -%>
  <%- if @ec2_key_id -%>
  ec2:
    key-id: <%= @ec2_key_id %>
    secret-key: <%= @ec2_secret_key %>
    user-data: <%= @ec2_user_data %>
    wait-timeout: <%= @ec2_wait_timeout %>
  <%- end -%>
<%= @custom_iaas.empty? ? nil : '  custom:' %>
<%- @custom_iaas.keys.sort.each do |custom_key| -%>
    <%= custom_key %>:
      provider: <%= custom_iaas[custom_key]['provider'] %>
      <%- case custom_iaas[custom_key]['provider'] -%>
      <%- when 'cloudstack' -%>
      url: <%= custom_iaas[custom_key]['cloudstack_api_url'] %>
      api-key: "<%= custom_iaas[custom_key]['cloudstack_apikey'] %>"
      secret-key: "<%= custom_iaas[custom_key]['cloudstack_secretkey'] %>"
      user-data: <%= custom_iaas[custom_key]['cloudstack_user_data'] %>
      wait-timeout: <%= custom_iaas[custom_key]['cloudstack_wait_timeout'] ? custom_iaas[custom_key]['cloudstack_wait_timeout'] : 300 %>
      <%- when 'ec2' -%>
      key-id: "<%= custom_iaas[custom_key]['ec2_key_id'] %>"
      secret-key: "<%= custom_iaas[custom_key]['ec2_secret_key'] %>"
      user-data: <%= custom_iaas[custom_key]['ec2_user_data'] %>
      wait-timeout: <%= custom_iaas[custom_key]['ec2_wait_timeout'] ? custom_iaas[custom_key]['ec2_wait_timeout'] : 300 %>
      <%- when 'dockermachine' -%>
      user-data: <%= custom_iaas[custom_key]['dockermachine_user_data'] %>
      debug: <%= custom_iaas[custom_key]['dockermachine_debug'] ? custom_iaas[custom_key]['dockermachine_debug'] : 'false' %>
      <%- if @custom_iaas[custom_key]['docker_flags'] -%>
      docker-flags: <%= custom_iaas[custom_key]['docker_flags'] %>
      <%- end -%>
      <%- if @custom_iaas[custom_key]['docker_install_url'] -%>
      docker-install-url: <%= custom_iaas[custom_key]['docker_install_url'] %>
      <%- end -%>
      <%- if @custom_iaas[custom_key]['docker_storage_driver'] -%>
      docker-storage-driver: <%= custom_iaas[custom_key]['docker_storage_driver'] %>
      <%- end -%>
      <%- if @custom_iaas[custom_key]['insecure_registry'] -%>
      insecure-registry: <%= custom_iaas[custom_key]['insecure_registry'] %>
      <%- end -%>
      driver:
        name: <%= custom_iaas[custom_key]['dockermachine_driver'] %>
        user-data-file-param: <%= custom_iaas[custom_key]['dockermachine_user_data_param'] %>
        options:
          <%- @custom_iaas[custom_key]['driver'].keys.each do |driver_key| -%>
          <%= driver_key.gsub('_','-') %>: <%= custom_iaas[custom_key]['driver'][driver_key] %>
          <%- end -%>
      <%- end -%>
  <%- end -%>
  node-protocol: <%= @iaas_node_protocol ? @iaas_node_protocol : 'http' %>
  node-port: <%= @iaas_node_port ? @iaas_node_port : '2375' %>
<% end %>
# - Debug configuration
# http://docs.tsuru.io/en/stable/reference/config.html#log-level
debug: <%= @tsuru_debug %>
log:
<%= @log_file ? "  log-file: #{@log_file}\n": nil -%>
<%= @log_disable_syslog ? "  disable-syslog: #{@log_disable_syslog}\n": nil -%>
  syslog-tag: <%= @log_syslog_tag %>
<%= @log_use_stderr ? "  use-stderr: #{@log_use_stderr}\n": nil -%>
  queue-size: <%= @log_queue_size %>
  app-log-rate-limit: <%= @log_app_rate_limit %>
  global-app-log-rate-limit: <%= @log_global_rate_limit %>
  unsafe-write: <%= @log_unsafe_write %>

<%- if @event_throttling_enable -%>
# - Event throttling configuration
# https://docs.tsuru.io/master/reference/config.html#event-throttling-configuration

event:
  throttling:<%= @event_throttling_configs.to_yaml.gsub("---", '').gsub("\"", '') %>
<% end -%>
